{
  "agentId": "AGENT-3",
  "task": "Trabajo general del agente",
  "timestamp": "2025-07-14T04:12:17.139Z",
  "mandatoryReading": {
    "workProtocol": "./AGENT_WORK_PROTOCOL.md",
    "unificationProtocol": "./UNIFICATION_PROTOCOL.md",
    "agentConfig": "./agent_config.json"
  },
  "permissions": {
    "canRead": [
      "flashcard-app-final.js"
    ],
    "canWrite": [
      "flashcard-app-final.js"
    ],
    "canDelete": [],
    "forbidden": [
      "Crear funciones duplicadas",
      "Modificar archivos de otros agentes",
      "Modificar UI directamente"
    ]
  },
  "namingConventions": {
    "functionPattern": "agent3[A-Z][a-zA-Z]*",
    "variablePattern": "AGENT3_[A-Z_]+",
    "examples": {
      "function": "agent3DataLoad",
      "variable": "AGENT3_CONFIG"
    },
    "forbidden": [
      "duplicateFunction",
      "copyFunction",
      "similarFunction"
    ]
  },
  "communicationProtocol": {
    "eventSystem": {
      "emit": "window.dispatchEvent(new CustomEvent('agent-communication', {\n                    detail: { from: 'AGENT-3', action: 'ACTION', data: {} }\n                }))",
      "listen": "window.addEventListener('agent-communication', (event) => {\n                    if (event.detail.from !== 'AGENT-3') { /* handle */ }\n                })"
    },
    "apiRegistration": {
      "register": "window.AGENT_API = window.AGENT_API || {};\n                window.AGENT_API['AGENT-3'] = { functionName: functionReference };",
      "call": "window.AGENT_API['TARGET-AGENT'].functionName(params)"
    }
  },
  "unificationRules": {
    "beforeModifying": [
      "Buscar funciones similares existentes",
      "Verificar si puedes reutilizar código",
      "Comprobar configuraciones existentes"
    ],
    "duringModification": [
      "Usar nombres únicos según convenciones",
      "Extender funcionalidad existente",
      "Centralizar nuevas configuraciones"
    ],
    "afterModification": [
      "Verificar cero duplicaciones nuevas",
      "Validar que las referencias funcionan",
      "Probar comunicación entre archivos"
    ]
  },
  "requiredChecks": {
    "preWork": [
      "Verificar permisos",
      "Leer protocolos",
      "Comprobar dependencias"
    ],
    "postWork": [
      "Verificar sintaxis",
      "Probar funcionalidad",
      "Confirmar cero duplicados"
    ]
  }
}